plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'com.google.devtools.ksp'
    id 'jacoco'
    id 'org.jetbrains.kotlin.android'
}

def apikeyPropertiesFile = rootProject.file("apikey.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

android {
    compileSdk 34
    defaultConfig {
        applicationId "com.bedboy.jetmovie"
        minSdkVersion 21
        targetSdk 34
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        buildConfigField("String", "APIKEY", "\"${apikeyProperties['APIKEY'] as String}\"")
        buildConfigField("String", "BASEURL", "\"${apikeyProperties['BASEURL'] as String}\"")
        buildConfigField("String", "IMGLINK", "\"${apikeyProperties['IMGLINK'] as String}\"")

    }

    signingConfigs {
        release {
            storeFile file(apikeyProperties["MYAPP_RELEASE_KEYSTORE_FILE"])
            storePassword apikeyProperties["MYAPP_RELEASE_KEYSTORE_PASSWORD"]
            keyAlias apikeyProperties["MYAPP_RELEASE_KEY_ALIAS"]
            keyPassword apikeyProperties["MYAPP_RELEASE_KEY_PASSWORD"]
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        buildConfig true
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = '11'
    }
}

jacoco {
    toolVersion = "0.8.8"
}

tasks.withType(Test).configureEach {
    finalizedBy jacocoTestReport
}

tasks.register("jacocoTestReport", JacocoReport) {
    dependsOn("testDebugUnitTest")

    reports {
        xml.required.set(true)
       // xml.outputLocation.set(file("$buildDir/reports/jacoco/jacocoTestReport/jacocoTestReport.xml"))
        html.required.set(true)
    }

    classDirectories.setFrom(
            fileTree("$buildDir/intermediates/javac/debug/classes") {
                exclude(
                        "**/R.class",
                        "**/BuildConfig.class",
                        "**/databinding/**",
                        "**/android/databinding/**"
                )
            }
    )
    sourceDirectories.setFrom(files(["src/main/java"]))
    executionData.setFrom(files(["build/jacoco/testDebugUnitTest.exec"]))

    doFirst {
        println("Execution data: ${executionData.files}")
        println("Source directories: ${sourceDirectories.files}")
        println("Class directories: ${classDirectories.files}")
        println("Output XML: ${buildDir}/reports/jacoco/jacocoTestReport/jacocoTestReport.xml")
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.core:core-ktx:$core_version"


    //UI
    implementation "androidx.appcompat:appcompat:$appCompat_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayout_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    ksp "com.github.bumptech.glide:compiler:$glide_version"
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"
    implementation "com.facebook.shimmer:shimmer:$shimmer_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation 'androidx.palette:palette-ktx:1.0.0'


    //WorkManager
    implementation "androidx.work:work-runtime:2.9.0"


    //Testing
    testImplementation "junit:junit:$jUnit_version"
    androidTestImplementation "junit:junit:$jUnit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.test.ext:junit-ktx:$jUnitTest_version"
    testImplementation "androidx.arch.core:core-testing:$androidCoreTest_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlin_version"
    testImplementation "org.mockito:mockito-core:5.4.0"
    testImplementation "org.mockito:mockito-inline:5.2.0"
    implementation "androidx.test.espresso:espresso-idling-resource:$espresso_version"

    //network
    implementation "androidx.activity:activity-ktx:$activityKTX_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHTTP_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$archLifeCycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$archLifeCycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$archLifeCycle_version"


    //Offline - Room
    implementation "androidx.room:room-runtime:$room_version"
    ksp "androidx.room:room-compiler:$room_version"

    //offline - datastore
    implementation "androidx.datastore:datastore-preferences:1.1.2"

    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3"

    //pagination
    implementation "androidx.paging:paging-runtime:$paging_version"
}
repositories {
    mavenCentral()
}
